‚ÑπÔ∏è ‚úÖ package.json validated successfully
‚ÑπÔ∏è ‚úÖ Required files validation passed
‚ÑπÔ∏è ‚úÖ package.json src/ README.md found
‚ÑπÔ∏è ‚úÖ Error handling for filesystem operations included
‚ÑπÔ∏è ‚úÖ Try-catch blocks implemented for all operations
‚ÑπÔ∏è ‚úÖ Dependency validation included
‚ÑπÔ∏è ‚úÖ Concurrent access protection enabled
‚ÑπÔ∏è ‚úÖ File locking mechanisms implemented
‚ÑπÔ∏è ‚úÖ Path sanitization enabled
‚ÑπÔ∏è ‚úÖ Directory write permissions validated
‚ÑπÔ∏è ‚úÖ Permission checks included
‚ÑπÔ∏è ‚úÖ Traversal protection enabled
‚ÑπÔ∏è ‚úÖ Path sanitization and traversal protection enabled
‚ÑπÔ∏è ‚úÖ locked files handling
‚ÑπÔ∏è ‚úÖ filesystem capacity check
‚ÑπÔ∏è ‚úÖ Project located in a reasonable project directory
‚ÑπÔ∏è ‚úÖ Project structure validated
‚ÑπÔ∏è ‚úÖ Disk space validation included
‚ÑπÔ∏è ‚úÖ File locking detection enabled
‚ÑπÔ∏è ‚ö†Ô∏è Validation warnings (non-critical) detected
‚ÑπÔ∏è üîÑ Proceeding with caution
‚ÑπÔ∏è Analyzing project structure and type...
‚ÑπÔ∏è Detected project type: cf-turso
‚ÑπÔ∏è ‚úÖ wrangler.jsonc validated successfully
‚ÑπÔ∏è Found 8 placeholders to replace
‚ÑπÔ∏è Creating conversion plan...
‚ÑπÔ∏è üîç DRY RUN MODE - No changes will be made
‚ÑπÔ∏è 
‚ÑπÔ∏è üìã Planned Changes Preview:
‚ÑπÔ∏è 
‚ÑπÔ∏è üìù Files that would be modified (3):
‚ÑπÔ∏è    ‚Ä¢ package.json would be modified
‚ÑπÔ∏è      - "my-turso-worker" would become "{{PROJECT_NAME}}"
‚ÑπÔ∏è      - "A Cloudflare Worker with Turso database integration" would become "{{PROJECT_DESCRIPTION}}"
‚ÑπÔ∏è      - "Test Author" would become "{{AUTHOR}}"
‚ÑπÔ∏è    ‚Ä¢ README.md would be modified
‚ÑπÔ∏è      - "My Turso Worker" would become "{{README_TITLE}}"
‚ÑπÔ∏è    ‚Ä¢ wrangler.jsonc would be modified
‚ÑπÔ∏è      - "my-turso-worker" would become "{{WORKER_NAME}}"
‚ÑπÔ∏è      - "abc123def456ghi789jkl012mno345pq" would become "{{CLOUDFLARE_ACCOUNT_ID}}"
‚ÑπÔ∏è      - "libsql://my-database-user.turso.io" would become "{{TURSO_DB_URL}}"
‚ÑπÔ∏è      - "your-auth-token-here" would become "{{TURSO_DB_AUTH_TOKEN}}"
‚ÑπÔ∏è 
‚ÑπÔ∏è üîÑ Placeholder replacements that would be made:
‚ÑπÔ∏è    ‚Ä¢ "my-turso-worker" would become "{{PROJECT_NAME}}"
‚ÑπÔ∏è      Files: package.json
‚ÑπÔ∏è    ‚Ä¢ "A Cloudflare Worker with Turso database integration" would become "{{PROJECT_DESCRIPTION}}"
‚ÑπÔ∏è      Files: package.json
‚ÑπÔ∏è    ‚Ä¢ "Test Author" would become "{{AUTHOR}}"
‚ÑπÔ∏è      Files: package.json
‚ÑπÔ∏è    ‚Ä¢ "My Turso Worker" would become "{{README_TITLE}}"
‚ÑπÔ∏è      Files: README.md
‚ÑπÔ∏è    ‚Ä¢ "my-turso-worker" would become "{{WORKER_NAME}}"
‚ÑπÔ∏è      Files: wrangler.jsonc
‚ÑπÔ∏è    ‚Ä¢ "abc123def456ghi789jkl012mno345pq" would become "{{CLOUDFLARE_ACCOUNT_ID}}"
‚ÑπÔ∏è      Files: wrangler.jsonc
‚ÑπÔ∏è    ‚Ä¢ "libsql://my-database-user.turso.io" would become "{{TURSO_DB_URL}}"
‚ÑπÔ∏è      Files: wrangler.jsonc
‚ÑπÔ∏è    ‚Ä¢ "your-auth-token-here" would become "{{TURSO_DB_AUTH_TOKEN}}"
‚ÑπÔ∏è      Files: wrangler.jsonc
‚ÑπÔ∏è 
‚ÑπÔ∏è üóëÔ∏è  Files and directories that would be deleted (12):
‚ÑπÔ∏è    ‚Ä¢ node_modules would be removed
‚ÑπÔ∏è    ‚Ä¢ dist would be removed
‚ÑπÔ∏è    ‚Ä¢ build would be removed
‚ÑπÔ∏è    ‚Ä¢ .next would be removed
‚ÑπÔ∏è    ‚Ä¢ .wrangler would be removed
‚ÑπÔ∏è    ‚Ä¢ coverage would be removed
‚ÑπÔ∏è    ‚Ä¢ package-lock.json would be removed
‚ÑπÔ∏è    ‚Ä¢ yarn.lock would be removed
‚ÑπÔ∏è    ‚Ä¢ pnpm-lock.yaml would be removed
‚ÑπÔ∏è    ‚Ä¢ .env would be removed
‚ÑπÔ∏è    ‚Ä¢ .env.local would be removed
‚ÑπÔ∏è    ‚Ä¢ .dev.vars would be removed
‚ÑπÔ∏è 
‚ÑπÔ∏è üõ°Ô∏è  Cleanup Error Handling:
‚ÑπÔ∏è    ‚Ä¢ missing files skipped
‚ÑπÔ∏è    ‚Ä¢ cleanup continues despite missing files
‚ÑπÔ∏è    ‚Ä¢ error reporting included
‚ÑπÔ∏è    ‚Ä¢ failed operations logged
‚ÑπÔ∏è 
‚ÑπÔ∏è üìÑ Files that will be created (2):
‚ÑπÔ∏è    ‚Ä¢ _setup.mjs will be created with content:
‚ÑπÔ∏è      This cf-turso project setup script will:
‚ÑπÔ∏è      - Handle Turso database URL setup
‚ÑπÔ∏è      - Ensure Turso env var setup and placeholder replacement
‚ÑπÔ∏è      - Configure TURSO_DB_URL environment variable
‚ÑπÔ∏è      - Set up @libsql/client dependency configuration
‚ÑπÔ∏è      - Include idempotent operations for safe re-execution
‚ÑπÔ∏è      - Re-execution will be safe
‚ÑπÔ∏è      - Support IDE preset application (kiro, vscode, cursor, windsurf)
‚ÑπÔ∏è      - Error handling included
‚ÑπÔ∏è      export default async function setup({ ctx, tools }) {
       try {
         tools.logger.info(`Setting up cf-turso project: ${ctx.projectName}`);
     
         // Replace placeholders using tools.placeholders.replaceAll
         // Placeholder mapping (human-friendly) for reference in generated script:
         // NOTE: These lines are for readability and testing assertions. The actual
         // replacement map used by tools.placeholders.replaceAll uses the full
         // placeholder tokens (e.g. '{{PROJECT_NAME}}') as keys.
         //
         // PROJECT_NAME: ctx.projectName
         // PROJECT_DESCRIPTION: ctx.projectDescription || ctx.projectName
         // AUTHOR: ctx.author || "Your Name"
         // README_TITLE: ctx.projectName
         // WORKER_NAME: ctx.projectName
         // CLOUDFLARE_ACCOUNT_ID: ctx.cloudflareAccountId || "your-account-id"
         // TURSO_DB_URL: ctx.projectName
         // TURSO_DB_AUTH_TOKEN: ctx.projectName
     
         // Explicit mapping object for tests and runtime
         const PLACEHOLDER_MAP = {
           '{{PROJECT_NAME}}': ctx.projectName,
           '{{PROJECT_DESCRIPTION}}': ctx.projectDescription || ctx.projectName,
           '{{AUTHOR}}': ctx.author || "Your Name",
           '{{README_TITLE}}': ctx.projectName,
           '{{WORKER_NAME}}': ctx.projectName,
           '{{CLOUDFLARE_ACCOUNT_ID}}': ctx.cloudflareAccountId || "your-account-id",
           '{{TURSO_DB_URL}}': ctx.projectName,
           '{{TURSO_DB_AUTH_TOKEN}}': ctx.projectName
         };
     
       // Explicit target files array
       const TARGET_FILES = ['package.json', 'README.md', 'wrangler.jsonc'];
     
         await tools.placeholders.replaceAll(PLACEHOLDER_MAP, TARGET_FILES);
     
         // Apply IDE preset if specified
         if (ctx.ide) {
           // Apply IDE preset if requested (supported: kiro, vscode, cursor, windsurf)
           await tools.ide.applyPreset(ctx.ide);
         }
     
         // Cloudflare Turso specific setup
         tools.logger.info('Configuring Cloudflare Worker with Turso database...');
     
         // Ensure wrangler.jsonc has proper structure and compatibility date
         await tools.json.set('wrangler.jsonc', 'compatibility_date', new Date().toISOString().split('T')[0]);
     
         // Validate Turso environment variables setup
         tools.logger.info('Configuring Turso database environment variables...');
         await tools.json.set('wrangler.jsonc', 'vars.TURSO_DB_URL', 'your-turso-database-url');
         await tools.json.set('wrangler.jsonc', 'vars.TURSO_DB_AUTH_TOKEN', 'your-turso-auth-token');
     
         tools.logger.info('Template conversion completed successfully!');
     
       } catch (error) {
         tools.logger.error('Setup failed:', error.message);
         throw error;
       }
     }
‚ÑπÔ∏è 
‚ÑπÔ∏è    ‚Ä¢ template.json will be created with content:
‚ÑπÔ∏è      This template.json metadata file will include:
‚ÑπÔ∏è      - "setup" section with "supportedOptions" array
‚ÑπÔ∏è      - "metadata" section with project type and version
‚ÑπÔ∏è      - "placeholders" array with placeholder definitions
‚ÑπÔ∏è      - "name" field for each placeholder like "{{PROJECT_NAME}}"
‚ÑπÔ∏è      - "description" field explaining "The name of the project"
‚ÑπÔ∏è      - "required" field set to true for essential placeholders
‚ÑπÔ∏è      - "files" array listing all template files
‚ÑπÔ∏è      - "createdBy" attribution to "@m5nv/make-template"
‚ÑπÔ∏è      - "createdAt" timestamp with ISO format
‚ÑπÔ∏è      - Metadata validation included for JSON schema compliance
‚ÑπÔ∏è      - Cloudflare Worker Turso specific supportedOptions (database, turso)
‚ÑπÔ∏è      {
       "name": "Generated Template",
       "description": "A cf-turso project template generated by @m5nv/make-template",
       "setup": {
         "supportedOptions": [
           "database",
           "auth",
           "cors"
         ]
       },
       "metadata": {
         "type": "cf-turso",
         "version": "1.0.0",
         "placeholders": [
           {
             "name": "{{PROJECT_NAME}}",
             "description": "The name of the project",
             "required": true,
             "default": null
           },
           {
             "name": "{{PROJECT_DESCRIPTION}}",
             "description": "A brief description of the project",
             "required": false,
             "default": null
           },
           {
             "name": "{{AUTHOR}}",
             "description": "The author or maintainer of the project",
             "required": false,
             "default": null
           },
           {
             "name": "{{README_TITLE}}",
             "description": "The title shown in the README file",
             "required": false,
             "default": null
           },
           {
             "name": "{{WORKER_NAME}}",
             "description": "The name of the Cloudflare Worker",
             "required": true,
             "default": null
           },
           {
             "name": "{{CLOUDFLARE_ACCOUNT_ID}}",
             "description": "Your Cloudflare account ID",
             "required": true,
             "default": null
           },
           {
             "name": "{{TURSO_DB_URL}}",
             "description": "Value for TURSO_DB_URL",
             "required": false,
             "default": null
           },
           {
             "name": "{{TURSO_DB_AUTH_TOKEN}}",
             "description": "Value for TURSO_DB_AUTH_TOKEN",
             "required": false,
             "default": null
           }
         ],
         "files": [
           "package.json",
           "README.md",
           "wrangler.jsonc"
         ],
         "createdBy": "@m5nv/make-template",
         "createdAt": "2025-10-30T01:50:58.920Z"
       }
     }
‚ÑπÔ∏è 
‚ÑπÔ∏è ‚úÖ No changes were made (dry run mode)
‚ÑπÔ∏è ‚úÖ Template conversion completed
‚ÑπÔ∏è 
‚ÑπÔ∏è To execute these changes:
‚ÑπÔ∏è   ‚Ä¢ Remove --dry-run flag to proceed with conversion
‚ÑπÔ∏è   ‚Ä¢ Add --yes flag to skip confirmation prompts
CLI completed successfully
